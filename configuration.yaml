homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret home_latitude
  longitude: !secret home_longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 1045
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Edmonton
  # Customization file
  customize: !include customize.yaml

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
  # Uncomment this to add a password (recommended!)
  api_password: !secret password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  # base_url: example.duckdns.org:8123

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:
  exclude:
    domains:
      - sun
      - time

# View all events in a logbook
logbook:

# Track the sun
sun:

sensor:
  - platform: template
    sensors:
      # Main house state:
      # home - we are home
      # away - we are away from home for a short period of time
      # on_vacation - we are away from home for a long period of time (vacation)
      # have_guests - we have guests over
      current_state:
        friendly_name: "Current State"
        entity_id:
          - input_select.system_mode
          - binary_sensor.somebody_home
        value_template: >-
          {% if is_state('input_select.system_mode', 'On vacation') %}
          on_vacation
          {% elif is_state('input_select.system_mode', 'Have guests') %}
          have_guests
          {% elif is_state('binary_sensor.somebody_home', 'on') %}
          home
          {% else %}
          away
          {% endif %}

  - platform: darksky
    api_key: !secret darksky_key
    monitored_conditions:
      - summary
      - icon
      - nearest_storm_distance
      - cloud_cover
      - temperature
      - apparent_temperature
      - hourly_summary

  - platform: time_date
    display_options:
      - time

  - platform: speedtest
    monitored_conditions:
      - ping
      - download
      - upload

  - platform: waqi
    token: !secret waqi_token
    locations: [Calgary]
    stations: ['Calgary Northwest, Alberta, Canada']

  - platform: zoneminder
    include_archived: false

  - platform: plex
    host: !secret plex_host
    server: plex
    username: !secret plex_user
    password: !secret plex_pass

  - platform: ring
    monitored_conditions:
      - last_activity
      - last_ding
      - last_motion

  - platform: moon

  - platform: season
    type: meteorological
# TODO doesn't work
#   - platform: mold_indicator
#     indoor_temp_sensor: sensor.main_floor_temperature
#     indoor_humidity_sensor: sensor.main_floor_humidity
#     outdoor_temp_sensor: sensor.yweather_temperature
#     calibration_factor: 2.0
# Text to speech
tts:
  - platform: google

group: !include groups.yaml
automation: !include_dir_merge_list automations/
script: !include scripts.yaml

device_tracker:

  - platform: netgear
    host: !secret netgear_host
    username: !secret netgear_user
    password: !secret netgear_pass

  - platform: nmap_tracker
    hosts:
      - !secret yulia_ip
      - !secret egor_ip

zone:
  - name: Home
    latitude: !secret home_latitude
    longitude: !secret home_longitude
    radius: 100
    icon: mdi:home
  - name: Work
    latitude: !secret work_latitude
    longitude: !secret work_longitude
    icon: mdi:worker
  - name: Parents
    latitude: !secret parents_latitude
    longitude: !secret parents_longitude
  - name: Cooper
    latitude: !secret cooper_latitude
    longitude: !secret cooper_longitude
  - name: Moroz
    latitude: !secret moroz_latitude
    longitude: !secret moroz_longitude

envisalink:
  host: !secret envisalink_host
  panel_type: DSC
  user_name: !secret envisalink_user
  password: !secret envisalink_pass
  code: !secret envisalink_code
  port: 4025
  evl_version: 4
  panic_type: Police
  zones:
    1:
      name: 'Foyer MD'
      type: 'motion'
    2:
      name: 'Dining Room MD'
      type: 'motion'
    3:
      name: 'Great Room MD'
      type: 'motion'
    4:
      name: 'Media Room MD 1'
      type: 'motion'
    5:
      name: 'Media Room MD 2'
      type: 'motion'
    6:
      name: 'Mudroom MD'
      type: 'motion'
    7:
      name: 'Mech Room MD'
      type: 'motion'
  partitions:
    1:
      name: 'Home Alarm'

ring:
  username: !secret ring_user
  password: !secret ring_pass

binary_sensor:
  - platform: workday
    country: CA
    province: AB

  - platform: template
    sensors:
      # True if it is dark outside if sun is below horizon or cloud coverage
      # is greater than 50%
      dark_outside:
        entity_id:
          - sun.sun
          - sensor.dark_sky_cloud_coverage
        friendly_name: Dark outside
        value_template: "{{states.sun.sun.attributes.elevation|float < 2 or states.sensor.dark_sky_cloud_coverage.state|float > 30}}"

      # True if it is night time (Between 21:00 and 6:00)
      night:
        friendly_name: Night time
        entity_id:
          - sensor.time
        value_template: '{{not(strptime("06:00", "%H:%M").time() < now().time() < strptime("21:00", "%H:%M").time())}}'

      # Is on for 5 minutes after motion detectors trigger
      motion_detected:
        friendly_name: Motion detected
        delay_off:
          minutes: 5
        entity_id:
          - group.motion_detectors
        value_template: "{{is_state('group.motion_detectors', 'on')}}"

  - platform: ring
    monitored_conditions:
      - ding
      - motion

  - platform: bayesian
    name: In Bed
    prior: .33 # 33% chance that we are in bed (8 hrs out of 24hrs)
    probability_threshold: 0.85
    observations:
      # We are in bed -> vey likely at least one household member is at home
      - entity_id: group.household
        platform: state
        to_state: home
        prob_given_true: 0.9 # 90% chance that if we are in bed we are at home
        prob_given_false: 0.7 # 70% chance that if we are not in bed we are at home
      # we are in bed -> likely alarm will be set
      - entity_id: alarm_control_panel.home_alarm
        platform: state
        to_state: armed_away
        prob_given_true: 0.7
        prob_given_false: 0.5
      # we are in bed -> vey likely no motion is detected
      - entity_id: binary_sensor.motion_detected
        platform: state
        to_state: 'off'
        prob_given_true: 0.8
      # we are in bed -> very likely it is night time
      - entity_id: binary_sensor.night
        platform: state
        to_state: 'on'
        prob_given_true: 0.9
      # we are in bed -> likely that at indoor lights are turned off
      - entity_id: group.indoor_lights
        platform: state
        to_state: 'off'
        prob_given_true: 0.7
        prob_given_false: 0.7

  - platform: bayesian
    name: Somebody home
    prior: 0.6  # 60% chance that somebody is at home at any given moment
    probability_threshold: 0.85
    observations:
      # Somebody at home -> Very likely at least one household member is at home
      - entity_id: group.household
        platform: state
        to_state: home
        prob_given_true: 0.9
      # Somebody at home -> Likely alarm is disarmed
      - entity_id: alarm_control_panel.home_alarm
        platform: state
        to_state: disarmed
        prob_given_true: 0.7
      # Somebody at home -> likely that at least one indoor light is turned on
      - entity_id: group.indoor_lights
        platform: state
        to_state: 'on'
        prob_given_true: 0.7
      # Somebody at home -> Very Likely motion will be detected
      - entity_id: binary_sensor.motion_detected
        platform: state
        to_state: 'on'
        prob_given_true: 0.8
        prob_given_false: 0.01
      # Somebody at home -> Very likely occupancy will detected
      - entity_id: group.occupancy_sensors
        platform: state
        to_state: 'on'
        prob_given_true: 0.8
        prob_given_false: 0.01

zoneminder:
  host: !secret zm_host
  path: /zm/
  path_zms: zm/cgi-bin/nph-zms

ecobee:
  api_key: !secret ecobee_api_key

camera:
  - platform: zoneminder
  - platform: generic
    still_image_url: http://trafficcam.calgary.ca/loc15.jpg
    name: Glenmore/Crowchild SW

cover:
  - platform: myq
    username: !secret myq_user
    password: !secret myq_pass
    type: liftmaster

media_player:
  - platform: plex
    entity_namespace: plex
    show_all_controls: True

  - platform: monoprice
    port: /dev/ttyUSB0
    name: Monoprice
    zones:
      11:
        name: Loft
      12:
        name: Master Bedroom
      13:
        name: Ensuite
      14:
        name: Living Room
      15:
        name: Kitchen/Dining Room
      16:
        name: Art Room
    sources:
      5:
        name: Chromcast Egor

logger:
 default: info

input_select:
  # Current automation mode
  # Normal - normal day to day life, work etc.
  # On Vacation - nobody is at home for a long period of time
  # Have guests - we have guests staying over
  system_mode:
    name: House Mode
    options:
      - Normal
      - On vacation
      - Have guests
    initial: Normal

telegram_bot:
  - platform: polling
    api_key: !secret telegram_api_key
    allowed_chat_ids:
      - !secret telegram_chat_id

notify:
   - name: telegram_egor
     platform: telegram
     chat_id: !secret telegram_chat_id
   - name: ecobee
     platform: ecobee

isy994:
  host: !secret isy_host
  username: !secret isy_user
  password: !secret isy_pass

scene:
  platform: hunterdouglas_powerview
  address: !secret powerview_address

alert:
  garage_door:
    name: Garage door is open
    done_message: Garage door is closed
    entity_id: cover.garage_door
    state: 'open'
    repeat: 5
    can_acknowledge: True
    skip_first: True
    notifiers:
      - telegram_egor
      - ecobee

input_datetime:
  night_starts:
    name: Night Mode Start
    has_date: false
    has_time: true
    initial: '1970-01-01 21:00'
  night_ends:
    name: Night Mode Ends
    has_date: false
    has_time: true
    initial: '1970-01-01 08:00'
